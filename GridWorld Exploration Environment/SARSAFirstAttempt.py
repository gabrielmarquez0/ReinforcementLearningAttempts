import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def updateValueFunctionSARSA(alpha, gamma, S, A, R, SPrime, APrime, Q):
    Q[S][A] = Q[S][A] + alpha * (R + gamma * Q[SPrime][APrime] - Q[S][A])
    return Q

def updateStateSARSA(S, A, transitionTable):
    return np.random.choice([state for state in transitionTable[S][A].keys()],
                             p=[prob for prob in transitionTable[S][A].values()])
            
def updateRewardSARSA(S, A, rewardTable):
    return  np.random.choice([reward for reward in rewardTable[S][A].keys()],
                             p=[prob for prob in rewardTable[S][A].values()])

def policy(epsilon, S, Q):
    greedy = np.random.choice([True, False],p = [1-epsilon, epsilon])
    possibleActions = []
    if greedy:
        possibleActions = [action for action, value in Q[S].items()
                           if Q[S][action] == max([value for value in Q[S].values()])]
    else:
        possibleActions = [action for action in Q[S].keys()]
    return np.random.choice(possibleActions)
        

def SARSA(episodesN, policy, updateValueFunction, updateState, updateReward, Q):
    records = {}
    for episode in range(episodesN):
        S = 30
        A = policy(S, Q)
        records[episode] = {"states": [30], "actions": [A]}
        while S != 37:
            SPrime = updateState(S, A)
            R = updateReward(S, A)
            APrime = policy(SPrime, Q)
            updateValueFunction(S, A, R, SPrime, APrime, Q)
            A, S = APrime, SPrime
            records[episode]["states"].append(S)
            records[episode]["actions"].append(A)
        records[episode]["valueFunction"] = Q.copy()
    return records

#only works for deterministic transitions
#include probabilistic transitions, and maybe a percentage error calculator
def recommendedRoute(Q, policy, updateState, startState, endState):
    movement = []
    state = startState
    while state != endState and not(state in movement):
        movement.append(state)
        action = policy(state, Q)
        state = updateState(state, action)
        print(state)
        print(endState)
        print(state in movement)
    return movement

def valueFunctionConvergence(Q1, Q2, decimalTolerance):
    #(Q1.keys(), Q1.values().keys(), Q1.values().values()
    return 0

 
def main():
    #windy gridworld, deterministic wind case, wall bounces
    transitionDetBounce = {0:{0:{1:1},1:{10:1},2:{0:1},3:{0:1}},
                  1:{0:{2:1},1:{11:1},2:{0:1},3:{1:1}},
                  2:{0:{3:1},1:{12:1},2:{1:1},3:{2:1}},
                  3:{0:{14:1},1:{23:1},2:{12:1},3:{3:1}},
                  4:{0:{15:1},1:{24:1},2:{13:1},3:{4:1}},
                  5:{0:{16:1},1:{25:1},2:{14:1},3:{5:1}},
                  6:{0:{27:1},1:{36:1},2:{25:1},3:{16:1}},
                  7:{0:{28:1},1:{37:1},2:{26:1},3:{17:1}},
                  8:{0:{19:1},1:{28:1},2:{17:1},3:{8:1}},
                  9:{0:{9:1},1:{19:1},2:{8:1},3:{9:1}},
                  10:{0:{11:1},1:{20:1},2:{10:1},3:{0:1}},
                  11:{0:{12:1},1:{21:1},2:{10:1},3:{1:1}},
                  12:{0:{13:1},1:{22:1},2:{11:1},3:{2:1}},
                  13:{0:{24:1},1:{33:1},2:{22:1},3:{13:1}},
                  14:{0:{25:1},1:{34:1},2:{23:1},3:{14:1}},
                  15:{0:{26:1},1:{35:1},2:{24:1},3:{15:1}},
                  16:{0:{37:1},1:{46:1},2:{35:1},3:{26:1}},
                  17:{0:{38:1},1:{47:1},2:{36:1},3:{27:1}},
                  18:{0:{29:1},1:{38:1},2:{27:1},3:{18:1}},
                  19:{0:{19:1},1:{29:1},2:{18:1},3:{9:1}},
                  20:{0:{21:1},1:{30:1},2:{20:1},3:{10:1}},
                  21:{0:{22:1},1:{31:1},2:{20:1},3:{11:1}},
                  22:{0:{23:1},1:{32:1},2:{21:1},3:{12:1}},
                  23:{0:{34:1},1:{43:1},2:{32:1},3:{23:1}},
                  24:{0:{35:1},1:{44:1},2:{33:1},3:{24:1}},
                  25:{0:{36:1},1:{45:1},2:{34:1},3:{25:1}},
                  26:{0:{47:1},1:{56:1},2:{45:1},3:{36:1}},
                  27:{0:{48:1},1:{57:1},2:{46:1},3:{37:1}},
                  28:{0:{39:1},1:{48:1},2:{37:1},3:{28:1}},
                  29:{0:{29:1},1:{39:1},2:{28:1},3:{19:1}},
                  30:{0:{31:1},1:{40:1},2:{30:1},3:{20:1}},
                  31:{0:{32:1},1:{41:1},2:{30:1},3:{21:1}},
                  32:{0:{33:1},1:{42:1},2:{31:1},3:{22:1}},
                  33:{0:{44:1},1:{53:1},2:{42:1},3:{33:1}},
                  34:{0:{45:1},1:{54:1},2:{43:1},3:{34:1}},
                  35:{0:{46:1},1:{55:1},2:{44:1},3:{35:1}},
                  36:{0:{57:1},1:{66:1},2:{55:1},3:{46:1}},
                  37:{0:{58:1},1:{67:1},2:{56:1},3:{47:1}},
                  38:{0:{49:1},1:{58:1},2:{47:1},3:{38:1}},
                  39:{0:{39:1},1:{49:1},2:{38:1},3:{29:1}},
                  40:{0:{41:1},1:{50:1},2:{40:1},3:{30:1}},
                  41:{0:{42:1},1:{51:1},2:{40:1},3:{31:1}},
                  42:{0:{43:1},1:{52:1},2:{41:1},3:{32:1}},
                  43:{0:{54:1},1:{63:1},2:{52:1},3:{43:1}},
                  44:{0:{55:1},1:{64:1},2:{53:1},3:{44:1}},
                  45:{0:{56:1},1:{65:1},2:{54:1},3:{45:1}},
                  46:{0:{67:1},1:{66:1},2:{65:1},3:{56:1}},
                  47:{0:{68:1},1:{67:1},2:{66:1},3:{57:1}},
                  48:{0:{59:1},1:{68:1},2:{57:1},3:{48:1}},
                  49:{0:{49:1},1:{59:1},2:{48:1},3:{39:1}},
                  50:{0:{51:1},1:{60:1},2:{50:1},3:{40:1}},
                  51:{0:{52:1},1:{61:1},2:{50:1},3:{41:1}},
                  52:{0:{53:1},1:{62:1},2:{51:1},3:{42:1}},
                  53:{0:{64:1},1:{63:1},2:{62:1},3:{53:1}},
                  54:{0:{65:1},1:{64:1},2:{63:1},3:{54:1}},
                  55:{0:{66:1},1:{65:1},2:{64:1},3:{55:1}},
                  56:{0:{67:1},1:{66:1},2:{65:1},3:{66:1}},
                  57:{0:{68:1},1:{67:1},2:{66:1},3:{67:1}},
                  58:{0:{69:1},1:{68:1},2:{67:1},3:{58:1}},
                  59:{0:{59:1},1:{69:1},2:{58:1},3:{49:1}},
                  60:{0:{61:1},1:{60:1},2:{60:1},3:{50:1}},
                  61:{0:{62:1},1:{61:1},2:{60:1},3:{51:1}},
                  62:{0:{63:1},1:{62:1},2:{61:1},3:{52:1}},
                  63:{0:{64:1},1:{63:1},2:{62:1},3:{63:1}},
                  64:{0:{65:1},1:{64:1},2:{63:1},3:{64:1}},
                  65:{0:{66:1},1:{65:1},2:{64:1},3:{65:1}},
                  66:{0:{67:1},1:{66:1},2:{65:1},3:{66:1}},
                  67:{0:{68:1},1:{67:1},2:{66:1},3:{67:1}},
                  68:{0:{69:1},1:{68:1},2:{67:1},3:{68:1}},
                  69:{0:{69:1},1:{69:1},2:{68:1},3:{59:1}},
                }

    #windy gridworld, deterministic wind case, no wall bounces
    transitionDet = {0:{0:{1:1},1:{10:1}},
                  1:{0:{2:1},1:{11:1},2:{0:1}},
                  2:{0:{3:1},1:{12:1},2:{1:1}},
                  3:{0:{14:1},1:{23:1},2:{12:1}},
                  4:{0:{15:1},1:{24:1},2:{13:1}},
                  5:{0:{16:1},1:{25:1},2:{14:1}},
                  6:{0:{27:1},1:{36:1},2:{25:1}},
                  7:{0:{28:1},1:{37:1},2:{26:1}},
                  8:{0:{19:1},1:{28:1},2:{17:1}},
                  9:{1:{19:1},2:{8:1}},
                  10:{0:{11:1},1:{20:1},3:{0:1}},
                  11:{0:{12:1},1:{21:1},2:{10:1},3:{1:1}},
                  12:{0:{13:1},1:{22:1},2:{11:1},3:{2:1}},
                  13:{0:{24:1},1:{33:1},2:{22:1},3:{13:1}},
                  14:{0:{25:1},1:{34:1},2:{23:1},3:{14:1}},
                  15:{0:{26:1},1:{35:1},2:{24:1},3:{15:1}},
                  16:{0:{37:1},1:{46:1},2:{35:1},3:{26:1}},
                  17:{0:{38:1},1:{47:1},2:{36:1},3:{27:1}},
                  18:{0:{29:1},1:{38:1},2:{27:1},3:{18:1}},
                  19:{1:{29:1},2:{18:1},3:{9:1}},
                  20:{0:{21:1},1:{30:1},3:{10:1}},
                  21:{0:{22:1},1:{31:1},2:{20:1},3:{11:1}},
                  22:{0:{23:1},1:{32:1},2:{21:1},3:{12:1}},
                  23:{0:{34:1},1:{43:1},2:{32:1},3:{23:1}},
                  24:{0:{35:1},1:{44:1},2:{33:1},3:{24:1}},
                  25:{0:{36:1},1:{45:1},2:{34:1},3:{25:1}},
                  26:{0:{47:1},1:{56:1},2:{45:1},3:{36:1}},
                  27:{0:{48:1},1:{57:1},2:{46:1},3:{37:1}},
                  28:{0:{39:1},1:{48:1},2:{37:1},3:{28:1}},
                  29:{1:{39:1},2:{28:1},3:{19:1}},
                  30:{0:{31:1},1:{40:1},3:{20:1}},
                  31:{0:{32:1},1:{41:1},2:{30:1},3:{21:1}},
                  32:{0:{33:1},1:{42:1},2:{31:1},3:{22:1}},
                  33:{0:{44:1},1:{53:1},2:{42:1},3:{33:1}},
                  34:{0:{45:1},1:{54:1},2:{43:1},3:{34:1}},
                  35:{0:{46:1},1:{55:1},2:{44:1},3:{35:1}},
                  36:{0:{57:1},1:{66:1},2:{55:1},3:{46:1}},
                  37:{0:{58:1},1:{67:1},2:{56:1},3:{47:1}},
                  38:{0:{49:1},1:{58:1},2:{47:1},3:{38:1}},
                  39:{1:{49:1},2:{38:1},3:{29:1}},
                  40:{0:{41:1},1:{50:1},3:{30:1}},
                  41:{0:{42:1},1:{51:1},2:{40:1},3:{31:1}},
                  42:{0:{43:1},1:{52:1},2:{41:1},3:{32:1}},
                  43:{0:{54:1},1:{63:1},2:{52:1},3:{43:1}},
                  44:{0:{55:1},1:{64:1},2:{53:1},3:{44:1}},
                  45:{0:{56:1},1:{65:1},2:{54:1},3:{45:1}},
                  46:{0:{67:1},1:{66:1},2:{65:1},3:{56:1}},
                  47:{0:{68:1},1:{67:1},2:{66:1},3:{57:1}},
                  48:{0:{59:1},1:{68:1},2:{57:1},3:{48:1}},
                  49:{1:{59:1},2:{48:1},3:{39:1}},
                  50:{0:{51:1},1:{60:1},3:{40:1}},
                  51:{0:{52:1},1:{61:1},2:{50:1},3:{41:1}},
                  52:{0:{53:1},1:{62:1},2:{51:1},3:{42:1}},
                  53:{0:{64:1},1:{63:1},2:{62:1},3:{53:1}},
                  54:{0:{65:1},1:{64:1},2:{63:1},3:{54:1}},
                  55:{0:{66:1},1:{65:1},2:{64:1},3:{55:1}},
                  56:{0:{67:1},1:{66:1},2:{65:1},3:{66:1}},
                  57:{0:{68:1},1:{67:1},2:{66:1},3:{67:1}},
                  58:{0:{69:1},1:{68:1},2:{67:1},3:{58:1}},
                  59:{1:{69:1},2:{58:1},3:{49:1}},
                  60:{0:{61:1},3:{50:1}},
                  61:{0:{62:1},2:{60:1},3:{51:1}},
                  62:{0:{63:1},2:{61:1},3:{52:1}},
                  63:{0:{64:1},2:{62:1},3:{63:1}},
                  64:{0:{65:1},2:{63:1},3:{64:1}},
                  65:{0:{66:1},2:{64:1},3:{65:1}},
                  66:{0:{67:1},2:{65:1},3:{66:1}},
                  67:{0:{68:1},2:{66:1},3:{67:1}},
                  68:{0:{69:1},2:{67:1},3:{68:1}},
                  69:{2:{68:1},3:{59:1}},
                }

    #late reward (1 for finishing, 0 for all other states) deterministic
    rewardLate = {0:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  1:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  2:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  3:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  4:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  5:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  6:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  7:{0:{0:1},1:{1:1},2:{0:1},3:{0:1}},
                  8:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  9:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  10:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  11:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  12:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  13:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  14:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  15:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  16:{0:{1:1},1:{0:1},2:{0:1},3:{0:1}},
                  17:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  18:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  19:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  20:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  21:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  22:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  23:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  24:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  25:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  26:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  27:{0:{0:1},1:{0:1},2:{0:1},3:{1:1}},
                  28:{0:{0:1},1:{0:1},2:{1:1},3:{0:1}},
                  29:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  30:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  31:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  32:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  33:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  34:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  35:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  36:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  37:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  38:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  39:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  40:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  41:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  42:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  43:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  44:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  45:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  46:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  47:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  48:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  49:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  50:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  51:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  52:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  53:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  54:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  55:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  56:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  57:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  58:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  59:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  60:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  61:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  62:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  63:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  64:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  65:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  66:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  67:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  68:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                  69:{0:{0:1},1:{0:1},2:{0:1},3:{0:1}},
                }

    #early reward (-1 for all states) deterministic
    rewardEarly = {0:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  1:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  2:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  3:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  4:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  5:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  6:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  7:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  8:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  9:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  10:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  11:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  12:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  13:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  14:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  15:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  16:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  17:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  18:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  19:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  20:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  21:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  22:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  23:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  24:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  25:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  26:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  27:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  28:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  29:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  30:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  31:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  32:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  33:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  34:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  35:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  36:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  37:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  38:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  39:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  40:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  41:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  42:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  43:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  44:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  45:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  46:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  47:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  48:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  49:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  50:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  51:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  52:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  53:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  54:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  55:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  56:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  57:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  58:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  59:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  60:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  61:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  62:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  63:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  64:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  65:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  66:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  67:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  68:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                  69:{0:{-1:1},1:{-1:1},2:{-1:1},3:{-1:1}},
                }

    #Q(S,A) given bounce
    QBounce = {0:{0:0,1:0,2:0,3:0},
         1:{0:0,1:0,2:0,3:0},
         2:{0:0,1:0,2:0,3:0},
         3:{0:0,1:0,2:0,3:0},
         4:{0:0,1:0,2:0,3:0},
         5:{0:0,1:0,2:0,3:0},
         6:{0:0,1:0,2:0,3:0},
         7:{0:0,1:0,2:0,3:0},
         8:{0:0,1:0,2:0,3:0},
         9:{0:0,1:0,2:0,3:0},
         10:{0:0,1:0,2:0,3:0},
         11:{0:0,1:0,2:0,3:0},
         12:{0:0,1:0,2:0,3:0},
         13:{0:0,1:0,2:0,3:0},
         14:{0:0,1:0,2:0,3:0},
         15:{0:0,1:0,2:0,3:0},
         16:{0:0,1:0,2:0,3:0},
         17:{0:0,1:0,2:0,3:0},
         18:{0:0,1:0,2:0,3:0},
         19:{0:0,1:0,2:0,3:0},
         20:{0:0,1:0,2:0,3:0},
         21:{0:0,1:0,2:0,3:0},
         22:{0:0,1:0,2:0,3:0},
         23:{0:0,1:0,2:0,3:0},
         24:{0:0,1:0,2:0,3:0},
         25:{0:0,1:0,2:0,3:0},
         26:{0:0,1:0,2:0,3:0},
         27:{0:0,1:0,2:0,3:0},
         28:{0:0,1:0,2:0,3:0},
         29:{0:0,1:0,2:0,3:0},
         30:{0:0,1:0,2:0,3:0},
         31:{0:0,1:0,2:0,3:0},
         32:{0:0,1:0,2:0,3:0},
         33:{0:0,1:0,2:0,3:0},
         34:{0:0,1:0,2:0,3:0},
         35:{0:0,1:0,2:0,3:0},
         36:{0:0,1:0,2:0,3:0},
         37:{0:0,1:0,2:0,3:0},
         38:{0:0,1:0,2:0,3:0},
         39:{0:0,1:0,2:0,3:0},
         40:{0:0,1:0,2:0,3:0},
         41:{0:0,1:0,2:0,3:0},
         42:{0:0,1:0,2:0,3:0},
         43:{0:0,1:0,2:0,3:0},
         44:{0:0,1:0,2:0,3:0},
         45:{0:0,1:0,2:0,3:0},
         46:{0:0,1:0,2:0,3:0},
         46:{0:0,1:0,2:0,3:0},
         47:{0:0,1:0,2:0,3:0},
         48:{0:0,1:0,2:0,3:0},
         49:{0:0,1:0,2:0,3:0},
         50:{0:0,1:0,2:0,3:0},
         51:{0:0,1:0,2:0,3:0},
         52:{0:0,1:0,2:0,3:0},
         53:{0:0,1:0,2:0,3:0},
         54:{0:0,1:0,2:0,3:0},
         55:{0:0,1:0,2:0,3:0},
         56:{0:0,1:0,2:0,3:0},
         57:{0:0,1:0,2:0,3:0},
         58:{0:0,1:0,2:0,3:0},
         59:{0:0,1:0,2:0,3:0},
         60:{0:0,1:0,2:0,3:0},
         61:{0:0,1:0,2:0,3:0},
         62:{0:0,1:0,2:0,3:0},
         63:{0:0,1:0,2:0,3:0},
         64:{0:0,1:0,2:0,3:0},
         65:{0:0,1:0,2:0,3:0},
         66:{0:0,1:0,2:0,3:0},
         67:{0:0,1:0,2:0,3:0},
         68:{0:0,1:0,2:0,3:0},
         69:{0:0,1:0,2:0,3:0}
       }

    #Q(S,A) without bounce
    Q = {0:{0:0,1:0},
         1:{0:0,1:0,2:0},
         2:{0:0,1:0,2:0},
         3:{0:0,1:0,2:0},
         4:{0:0,1:0,2:0},
         5:{0:0,1:0,2:0},
         6:{0:0,1:0,2:0},
         7:{0:0,1:0,2:0},
         8:{0:0,1:0,2:0},
         9:{1:0,2:0},
         10:{0:0,1:0,3:0},
         11:{0:0,1:0,2:0,3:0},
         12:{0:0,1:0,2:0,3:0},
         13:{0:0,1:0,2:0,3:0},
         14:{0:0,1:0,2:0,3:0},
         15:{0:0,1:0,2:0,3:0},
         16:{0:0,1:0,2:0,3:0},
         17:{0:0,1:0,2:0,3:0},
         18:{0:0,1:0,2:0,3:0},
         19:{1:0,2:0,3:0},
         20:{0:0,1:0,3:0},
         21:{0:0,1:0,2:0,3:0},
         22:{0:0,1:0,2:0,3:0},
         23:{0:0,1:0,2:0,3:0},
         24:{0:0,1:0,2:0,3:0},
         25:{0:0,1:0,2:0,3:0},
         26:{0:0,1:0,2:0,3:0},
         27:{0:0,1:0,2:0,3:0},
         28:{0:0,1:0,2:0,3:0},
         29:{1:0,2:0,3:0},
         30:{0:0,1:0,3:0},
         31:{0:0,1:0,2:0,3:0},
         32:{0:0,1:0,2:0,3:0},
         33:{0:0,1:0,2:0,3:0},
         34:{0:0,1:0,2:0,3:0},
         35:{0:0,1:0,2:0,3:0},
         36:{0:0,1:0,2:0,3:0},
         37:{0:0,1:0,2:0,3:0},
         38:{0:0,1:0,2:0,3:0},
         39:{1:0,2:0,3:0},
         40:{0:0,1:0,3:0},
         41:{0:0,1:0,2:0,3:0},
         42:{0:0,1:0,2:0,3:0},
         43:{0:0,1:0,2:0,3:0},
         44:{0:0,1:0,2:0,3:0},
         45:{0:0,1:0,2:0,3:0},
         46:{0:0,1:0,2:0,3:0},
         46:{0:0,1:0,2:0,3:0},
         47:{0:0,1:0,2:0,3:0},
         48:{0:0,1:0,2:0,3:0},
         49:{1:0,2:0,3:0},
         50:{0:0,1:0,3:0},
         51:{0:0,1:0,2:0,3:0},
         52:{0:0,1:0,2:0,3:0},
         53:{0:0,1:0,2:0,3:0},
         54:{0:0,1:0,2:0,3:0},
         55:{0:0,1:0,2:0,3:0},
         56:{0:0,1:0,2:0,3:0},
         57:{0:0,1:0,2:0,3:0},
         58:{0:0,1:0,2:0,3:0},
         59:{1:0,2:0,3:0},
         60:{0:0,3:0},
         61:{0:0,2:0,3:0},
         62:{0:0,2:0,3:0},
         63:{0:0,2:0,3:0},
         64:{0:0,2:0,3:0},
         65:{0:0,2:0,3:0},
         66:{0:0,2:0,3:0},
         67:{0:0,2:0,3:0},
         68:{0:0,2:0,3:0},
         69:{2:0,3:0}
       }

    episodesN = 200
    alpha = .5
    gamma = 1
    epsilon = 0.1
    records = SARSA(episodesN,
       lambda x,y: policy(epsilon, x, y),
       lambda u,v,w,x,y,z: updateValueFunctionSARSA(alpha, gamma, u, v, w, x, y, z),
       lambda x,y: updateStateSARSA(x,y, transitionDet),
       lambda x,y: updateRewardSARSA(x,y, rewardEarly),
       Q)

    plt.plot(records[1],records[0])
    plt.show()
    plt.plot([1, 2, 3, 4], [1, 4, 9, 16])
    
if __name__ == "__main__":
    main()
